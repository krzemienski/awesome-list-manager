"use strict";(()=>{var e={};e.id=424,e.ids=[424],e.modules={2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2361:e=>{e.exports=require("events")},7147:e=>{e.exports=require("fs")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},1808:e=>{e.exports=require("net")},7561:e=>{e.exports=require("node:fs")},4492:e=>{e.exports=require("node:stream")},2477:e=>{e.exports=require("node:stream/web")},1017:e=>{e.exports=require("path")},5477:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},4404:e=>{e.exports=require("tls")},7310:e=>{e.exports=require("url")},3837:e=>{e.exports=require("util")},1267:e=>{e.exports=require("worker_threads")},9796:e=>{e.exports=require("zlib")},4257:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>h,originalPathname:()=>y,patchFetch:()=>_,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>x,staticGenerationBailout:()=>q});var i={};r.r(i),r.d(i,{GET:()=>d,POST:()=>p});var s=r(5419),o=r(9108),n=r(9678),a=r(8070),l=r(7699),u=r(2455),c=r(8105);async function p(e,{params:t}){try{let r=(0,l.createRouteHandlerClient)({cookies:u.cookies}),{listId:i}=t,{items:s}=await e.json();if(!s||!Array.isArray(s))return a.Z.json({error:"Items array is required"},{status:400});let{data:o,error:n}=await r.from("lists").select("user_id").eq("id",i).single();if(n||!o)return a.Z.json({error:"List not found"},{status:404});let{data:p}=await r.from("user_settings").select("openai_api_key, auto_categorize").eq("user_id",o.user_id).single(),d=[];for(let e of s){let{url:t,title:s,description:o}=e,n=null,a=[];if(p?.openai_api_key&&p?.auto_categorize&&(c.bc(p.openai_api_key),(a=await c.SQ(t,s||"",o||"")).length>0)){let{data:e}=await r.from("categories").select("id").eq("list_id",i).ilike("name",a[0]).single();e&&(n=e.id)}let{data:l,error:u}=await r.from("links").insert([{list_id:i,url:t,title:s||t,description:o,category_id:n}]).select().single();u?d.push({url:t,error:"Failed to create link"}):d.push({...l,suggested_categories:a})}return a.Z.json(d)}catch(e){return console.error("Error creating items:",e),a.Z.json({error:"Internal server error"},{status:500})}}async function d(e,{params:t}){try{let e=(0,l.createRouteHandlerClient)({cookies:u.cookies}),{data:r,error:i}=await e.from("list_items").select("*").eq("list_id",t.listId).order("category",{ascending:!0}).order("created_at",{ascending:!0});if(i)throw i;return a.Z.json(r)}catch(e){return console.error("Error fetching list items:",e),a.Z.json({error:"Internal server error"},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/lists/[listId]/items/route",pathname:"/api/lists/[listId]/items",filename:"route",bundlePath:"app/api/lists/[listId]/items/route"},resolvedPagePath:"/Users/nick/Desktop/alm/src/app/api/lists/[listId]/items/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:g,staticGenerationAsyncStorage:x,serverHooks:f,headerHooks:h,staticGenerationBailout:q}=m,y="/api/lists/[listId]/items/route";function _(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:x})}},8105:(e,t,r)=>{r.d(t,{SQ:()=>n,bc:()=>o,xe:()=>a});var i=r(5185);let s=null;function o(e){s=new i.ZP({apiKey:e})}async function n(e,t,r){if(!s)throw Error("OpenAI client not initialized");let i=`Given this resource:
URL: ${e}
Title: ${t}
Description: ${r}

Suggest up to 3 appropriate categories for this resource in an awesome list. Return only the category names, one per line.`,o=await s.chat.completions.create({model:"gpt-3.5-turbo",messages:[{role:"user",content:i}],temperature:.7,max_tokens:100});return o.choices[0].message.content?.split("\n").filter(Boolean)||[]}async function a(e){if(!s)throw Error("OpenAI client not initialized");let t=`Given this URL: ${e}

Suggest 3 related resources that would be good additions to an awesome list. Return them in this format:
Title: [title]
URL: [url]
Description: [brief description]

---`;return((await s.chat.completions.create({model:"gpt-3.5-turbo",messages:[{role:"user",content:t}],temperature:.7,max_tokens:500})).choices[0].message.content||"").split("---").filter(Boolean).map(e=>{let t=e.trim().split("\n");return{title:t[0].replace("Title:","").trim(),url:t[1].replace("URL:","").trim(),description:t[2].replace("Description:","").trim()}})}}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),i=t.X(0,[225,280,185],()=>r(4257));module.exports=i})();